[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dafu-cli"
version = "1.0.0"
description = "DAFU - Data Analytics Functional Utilities CLI"
readme = "README.md"
license = {text = "AGPL-3.0"}
authors = [
    {name = "MasterFabric", email = "dafu@masterfabric.co"}
]
keywords = ["fraud-detection", "machine-learning", "cli", "analytics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"

dependencies = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "IPython>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
]

[project.urls]
Homepage = "https://github.com/MasterFabric/dafu"
Documentation = "https://github.com/MasterFabric/dafu#readme"
Repository = "https://github.com/MasterFabric/dafu"
"Bug Reports" = "https://github.com/MasterFabric/dafu/issues"

[project.scripts]
dafu = "dafu_cli.cli:main"

[tool.setuptools]
packages = ["dafu_cli"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.tox
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=dafu_cli --cov-report=html --cov-report=term"

